apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'android-aspectjx'//面向切面
apply plugin: 'com.alibaba.arouter'

aspectjx {
    exclude 'androidx.*'
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.shetj.diyalbume"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        flavorDimensions "versionCode"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }

    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }
    signingConfigs {
        release {
            keyAlias 'qcshengdeng'
            keyPassword 'qcshengdeng'
            storeFile file('./qc.jks')
            storePassword 'qcshengdeng'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            debuggable false
            minifyEnabled false
            zipAlignEnabled true
            // dex突破65535的限制
            multiDexEnabled true
            // 移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "false"
            debuggable true
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            // dex突破65535的限制
            multiDexEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            ndk {
                abiFilters 'x86'                 // for debug in AVD.
            }
        }
    }

//    applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                def fileName = outputFile.name.replace(".apk", "-${releaseTime()}-${defaultConfig.versionName}.apk")
//                outputFileName = fileName
//            }
//        }
//    }

//    //打包重命名
    applicationVariants.all {
        variant ->
            variant.outputs.all {
                output -> output.outputFileName = "shetj-${variant.name}-${releaseTime()}-${defaultConfig.versionName}.apk"
            }
    }

    //导入aar
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }


    def listSubFile = {
        def resFolder = 'src/main/res/layouts'
        def files = file(resFolder).listFiles()
        def folders = []
        files.each {
            item -> folders.add(item.absolutePath)
        }
        folders.add(file(resFolder).parentFile.absolutePath)
        return folders
    }
    sourceSets {
        main {
            res.srcDirs = listSubFile()
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "$androidSupportSdkVersion"
                }
            }
            if (requested.group == 'com.google.code.gson') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '2.8.2'
                }
            }
            if (requested.group == 'com.github.bumptech.glide') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '4.9.0'
                }
            }
            if (requested.group == 'com.tencent.mm.opensdk') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '5.1.4'
                }
            }
            if (requested.group == 'com.squareup.okhttp3') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '3.10.0'
                }
            }
        }
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.browser:browser:1.0.0'


    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    implementation 'com.shuyu:GSYVideoPlayer:7.0.2'
    implementation 'com.devyok.ipc:ipc-libcore:0.0.2'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation project(':router')
    kapt 'com.alibaba:arouter-compiler:1.2.1'
    implementation "com.github.SheTieJun:Base:$base_version"
    implementation 'com.airbnb.android:lottie:2.7.0'
    implementation 'com.clj.fastble:FastBleLib:2.3.2'

    implementation project(path: ':rxFingerPrinter')
    implementation project(':transition')
    implementation project(':tencent-x5')
    implementation project(':update')
    implementation project(':fresco')
    implementation project(':bdmap')

    implementation project(':download')

    implementation 'com.github.SheTieJun:aspectutils:12004150ad'

    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:5.1.4'
    implementation 'com.youth.banner:banner:1.4.10'
    implementation 'com.irozon.sneaker:sneaker:1.0.3'

    implementation 'com.github.iielse:ImageWatcher:1.1.5'
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.2'

    implementation 'com.afollestad.material-dialogs:core:3.1.0'

    implementation 'com.zhouyou:rxeasyhttp:2.1.2'

    implementation 'com.github.ybq:Android-SpinKit:1.2.0'

    def work_version = "2.0.1"
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    // Kotlin + coroutines

    // optional - RxJava2 support
    implementation "androidx.work:work-rxjava2:$work_version"
    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

//    implementation 'androidx.lifecycle:lifecycle-common-java8:2.0.0'

    //KTX
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation "androidx.work:work-runtime-ktx:$work_version"


    def nav_version = "1.0.0"
    implementation "android.arch.navigation:navigation-fragment:$nav_version" // use -ktx for Kotlin
    implementation "android.arch.navigation:navigation-ui:$nav_version" // use -ktx for Kotlin


    //MarkDown 空间
    implementation 'us.feras.mdv:markdownview:1.1.0'

}
